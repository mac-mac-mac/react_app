[{"/workspace/react_app/reactapp/src/index.js":"1","/workspace/react_app/reactapp/src/App.js":"2","/workspace/react_app/reactapp/src/components/Header.jsx":"3","/workspace/react_app/reactapp/src/components/MainBody.jsx":"4","/workspace/react_app/reactapp/src/components/LightTheme.js":"5","/workspace/react_app/reactapp/src/components/DarkTheme.js":"6"},{"size":1109,"mtime":1667699013580,"results":"7","hashOfConfig":"8"},{"size":229,"mtime":1667692725877,"results":"9","hashOfConfig":"8"},{"size":1380,"mtime":1667694686180,"results":"10","hashOfConfig":"8"},{"size":414,"mtime":1667694678120,"results":"11","hashOfConfig":"8"},{"size":103,"mtime":1667695120932,"results":"12","hashOfConfig":"8"},{"size":102,"mtime":1667695128476,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"w704kg",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/react_app/reactapp/src/index.js",["33"],[],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\n//import './sass/App.scss';\nimport App from './App';\n\nconst LightTheme = React.lazy(() => import('./components/LightTheme'));\nconst DarkTheme = React.lazy(() => import('./components/DarkTheme'));\n\nconst ThemeSelector = ({children}) => {\n  const theme = localStorage.getItem('theme') ? localStorage.getItem('theme') : window.matchMedia('prefers-color-scheme: dark').matches ? \"dark\" : \"light\";\n  localStorage.setItem('theme', theme)\n\n  return(\n    <React.Suspense fallback={<>...Loading</>} key={theme}>\n      {theme === 'dark' && <DarkTheme />}\n      {theme === 'light' && <LightTheme />}\n      <button onClick={() => {\n        localStorage.setItem('theme', localStorage.getItem('theme') === 'dark' ? 'light' : 'dark');\n        window.location.reload()\n      }}> \n        Change Mode\n      </button>\n      {children}\n    </React.Suspense>\n  )\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <ThemeSelector>\n      <App />\n    </ThemeSelector>\n  </React.StrictMode>\n);\n","/workspace/react_app/reactapp/src/App.js",[],[],"/workspace/react_app/reactapp/src/components/Header.jsx",[],[],"/workspace/react_app/reactapp/src/components/MainBody.jsx",[],[],"/workspace/react_app/reactapp/src/components/LightTheme.js",[],[],"/workspace/react_app/reactapp/src/components/DarkTheme.js",[],[],{"ruleId":"34","severity":1,"message":"35","line":1,"column":17,"nodeType":"36","messageId":"37","endLine":1,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar"]